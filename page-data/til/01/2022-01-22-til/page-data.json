{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/til/01/2022-01-22-til/",
    "result": {"data":{"cur":{"id":"1b4c4842-7894-55cc-b119-b2141b15a381","html":"<h2 id=\"-학습-과정\" style=\"position:relative;\"><a href=\"#-%ED%95%99%EC%8A%B5-%EA%B3%BC%EC%A0%95\" aria-label=\" 학습 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👨‍💻 학습 과정</h2>\n<h4 id=\"소프트웨어의-품격\" style=\"position:relative;\"><a href=\"#%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4%EC%9D%98-%ED%92%88%EA%B2%A9\" aria-label=\"소프트웨어의 품격 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소프트웨어의 품격</h4>\n<p>토요일마다 진행되는 스터디가 있어서 오늘은 해당 내용을 준비했다.</p>\n<p>책을 읽으면서 알게된 것 중 하나는 시간복잡도를 계산하는 방식에 <strong>분할상환 기법</strong> 이라는게 있다는 사실이다.\n일반적으로 시간복잡도를 계산할때는 해당 메서드를 한번 실행했을때의 분석 결과를 시간복잡도로 정한다. 하지만 분할상환 기법 방식은 여러번 메서드를 실행했을때의 경우를 분석한다.<br>\n이 방식은 여러번 연산을 해서 미래에 실행할때는 더 나은 결과를 낼 수 있는 알고리즘을 분석할 때 사용한다. 아쉽게도 계산하는 방식은 제대로 이해를 못했다.</p>\n<p>사실 그동안 미션을 진행하면서 시간복잡도를 고려하면서 구현한적은 없었던것 같다. 동작 여부에 초점을 맞추고 진행해왔는데 이번 챕터를 학습하면서 시간 복잡도에 대해서 고민해보게 되었고,\n<strong>해당 서비스의 특성이나 서비스 중에서도 현재 좋은 성능을 내야만 하는 부분에 초점을 맞추고</strong> 개발해야겠다는 생각을 갖게 되었다.</p>\n<h4 id=\"좋은-스터디원의-자세\" style=\"position:relative;\"><a href=\"#%EC%A2%8B%EC%9D%80-%EC%8A%A4%ED%84%B0%EB%94%94%EC%9B%90%EC%9D%98-%EC%9E%90%EC%84%B8\" aria-label=\"좋은 스터디원의 자세 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>좋은 스터디원의 자세..?</h4>\n<p>학습을 진행하다보면 이해가 안되는 부분, 궁금한 부분들이 생긴다. 근데 나는 이걸 물어보기보다는 그냥 구글을 통해서 직접 찾아보며 해결하고 그걸로 끝낸다.\n근데 오늘 스터디를 진행하면서 동료들이 내가 궁금했던 부분들에 대해서 질문을 남기는걸 보고 나를 돌아보게 되었다.</p>\n<p>혼자 학습하고 이해 안되는 부분들을 혼자 해결하고 끝내는 사람들로만 구성된 스터디가 있다면 과연 서로 얻어가는게 있을까?<br>\n해결되지 않은 질문이 있다면 함께 하는 스터디원들에게 물어보고, 해결이 되었다면 그 과정을 공유할때 더 좋은 스터디가 되지 않을까 싶다.\n물론 누군가는 당연하게 알고 있는 내용일수도 있겠지만 나와 같은 고민을 하고 있는 사람들도 있을 수 있다.</p>\n<p><strong>더 적극적으로 질문하고, 좋은 정보를 공유할 수 있는 스터디원이 되자.</strong></p>\n<br>\n<h3 id=\"-좋았던-점\" style=\"position:relative;\"><a href=\"#-%EC%A2%8B%EC%95%98%EB%8D%98-%EC%A0%90\" aria-label=\" 좋았던 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🟢 좋았던 점</h3>\n<hr>\n<ul>\n<li>내가 잘한건 아니고 드디어 해피해킹이 왔다. 좋다. 진짜 좋다.</li>\n<li>계획했던 학습 시간을 지켰다.</li>\n</ul>\n<br>\n<h3 id=\"-아쉬웠던-점\" style=\"position:relative;\"><a href=\"#-%EC%95%84%EC%89%AC%EC%9B%A0%EB%8D%98-%EC%A0%90\" aria-label=\" 아쉬웠던 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔴 아쉬웠던 점</h3>\n<hr>\n<ul>\n<li>질문하는것, 공유하는것을 못했다.</li>\n</ul>\n<br>\n<h3 id=\"-개선점\" style=\"position:relative;\"><a href=\"#-%EA%B0%9C%EC%84%A0%EC%A0%90\" aria-label=\" 개선점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🟡 개선점</h3>\n<hr>\n<ul>\n<li>학습하면서 토론할 거리, 질문할 것들을 정리해두자. 해결이 된건 과정도 함께 정리해두자.</li>\n</ul>","excerpt":"👨‍💻 학습 과정 소프트웨어의 품격 토요일마다 진행되는 스터디가 있어서 오늘은 해당 내용을 준비했다. 책을 읽으면서 알게된 것 중 하나는 시간복잡도를 계산하는 방식에 분할상환 기법 이라는게 있다는 사실이다.\n일반적으로 시간복잡도를 계산할때는 해당 메서드를 한번 실행했을때의 분석 결과를 시간복잡도로 정한다. 하지만 분할상환 기법 방식은 여러번 메서드를 실행했을때의 경우를 분석한다. 이 방식은 여러번 연산을 해서 미래에 실행할때는 더 나은 결과를 낼 수 있는 알고리즘을 분석할 때 사용한다. 아쉽게도 계산하는 방식은 제대로 이해를 못했다. 사실 그동안 미션을 진행하면서 시간복잡도를 고려하면서 구현한적은 없었던것 같다. 동작 여부에 초점을 맞추고 진행해왔는데 이번 챕터를 학습하면서 시간 복잡도에 대해서 고민해보게 되었고,\n해당 서비스의 특성이나 서비스 중에서도 현재 좋은 성능을 내야만 하는 부분에 초점을 맞추고 개발해야겠다는 생각을 갖게 되었다. 좋은 스터디원의 자세..? 학습을 진행하다보면…","frontmatter":{"date":"January 22, 2022","title":"TIL-220122","categories":"TIL","author":"포키","emoji":"📝"},"fields":{"slug":"/til/01/2022-01-22-til/"}},"next":{"id":"6b36728d-a402-5653-bd09-d6d047f66f0e","html":"<h2 id=\"-학습-과정\" style=\"position:relative;\"><a href=\"#-%ED%95%99%EC%8A%B5-%EA%B3%BC%EC%A0%95\" aria-label=\" 학습 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👨‍💻 학습 과정</h2>\n<h4 id=\"compile-vs-implementation\" style=\"position:relative;\"><a href=\"#compile-vs-implementation\" aria-label=\"compile vs implementation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>compile vs implementation</h4>\n<p>테스트코드를 작성할 때 assertJ를 사용하기 위해서 항상 build.gradle 파일에 의존성을 추가해주는 작업을 해왔다.\n근데 어디서는 test compile을 사용하고 어디서는 test implementation을 사용하는것을 보고 무슨 차이가 있는지 궁금해서 찾아보게 되었다.</p>\n<p>일단 gradle 3.0버전 이후 compile은 사라졌다. 대신 implmentation과 api로 나뉘어지게 되었다.\n먼저 api는 클래스 중 하나가 변경되면, 해당 클래스에 대한 의존성을 가진 모든 클래스를 다시 빌드 해야한다. 직접적으로 의존하고 있지 않아도 의존하고 있는 클래스가 변경된 클래스를 의존할경우 함께 재빌드 된다.\n반면 implementation은 직접적으로 의존하고 있는 클래스 하나만 재빌드 되기 때문에 빌드 속도면에서 빠르다는 이점이 생긴다.</p>\n<p>또한 api는 직접적이든 간접적이든 연결된 모든 모듈의 api가 노출이 되지만 implementation은 필요한 모듈만 가지고 온다는 차이를 갖는다. (<em>실제 프로젝트를 진행해봐야 이 차이를 더 잘 이해할거 같다.</em>)</p>\n<br>\n<h4 id=\"함수형-프로그래밍\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"함수형 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수형 프로그래밍</h4>\n<p>오늘은 함수형 프로그래밍에 대한 미션이 주어졌다. 자바스크립트를 공부하면서 접했던 개념이라 금방 이해하고 구현할 수 있을거라고 생각했는데 오산이었다.😂<br>\n하루종일 함수형 프로그래밍의 개념과 자바에서는 어떻게 사용하는지, 람다와 스트림에 대해 학습하느라 미션 구현은 밤이 되어서야 진행할 수 있었고 결국 4시에 잤다.\n그래도 이번 미션을 통해서 알게된 점은 그동안 내가 람다와 스트림에 대해 제대로 모르고 사용해왔다는 점이다. 간단하게 filter, map 정도는 사용했지만 단순히 화살표 함수 같이 보이는 람다가 실제로는 익명객체이라는점, 스트림에서 제공하는 많은 함수들에 대해 알 수 있었다.</p>\n<br>\n<h3 id=\"-좋았던-점\" style=\"position:relative;\"><a href=\"#-%EC%A2%8B%EC%95%98%EB%8D%98-%EC%A0%90\" aria-label=\" 좋았던 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🟢 좋았던 점</h3>\n<hr>\n<ul>\n<li>드디어 목표한 시간에 일어났다.</li>\n<li>학습시간을 어제보다 늘렸다.</li>\n</ul>\n<br>\n<h3 id=\"-아쉬웠던-점\" style=\"position:relative;\"><a href=\"#-%EC%95%84%EC%89%AC%EC%9B%A0%EB%8D%98-%EC%A0%90\" aria-label=\" 아쉬웠던 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔴 아쉬웠던 점</h3>\n<hr>\n<ul>\n<li>이정도면 되겠지, 적당히 알면 되겠지라는 마인드가 아직도 남아있다.</li>\n</ul>\n<br>\n<h3 id=\"-개선점\" style=\"position:relative;\"><a href=\"#-%EA%B0%9C%EC%84%A0%EC%A0%90\" aria-label=\" 개선점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🟡 개선점</h3>\n<hr>\n<ul>\n<li>깊~게 학습하려고 노력하자.</li>\n</ul>","frontmatter":{"date":"January 20, 2022","title":"TIL-220120","categories":"TIL","author":"포키","emoji":"📝"},"fields":{"slug":"/til/01/2022-01-20-til/"}},"prev":{"id":"3d92aaf8-8d68-5a82-a63f-05a7d9a9112c","html":"<h2 id=\"-학습-과정\" style=\"position:relative;\"><a href=\"#-%ED%95%99%EC%8A%B5-%EA%B3%BC%EC%A0%95\" aria-label=\" 학습 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👨‍💻 학습 과정</h2>\n<h4 id=\"프로세스-스레드-스케줄링에-대해-학습\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-%EC%8A%A4%EB%A0%88%EB%93%9C-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81%EC%97%90-%EB%8C%80%ED%95%B4-%ED%95%99%EC%8A%B5\" aria-label=\"프로세스 스레드 스케줄링에 대해 학습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로세스, 스레드, 스케줄링에 대해 학습</h4>\n<p>미션의 주제가 프로세스와 스레드의 스케줄링에 대한 내용들이었다.<br>\n저번주 프로세스 메모리 구조 미션에서는 코드를 한줄도 작성하지 못해서 좌절했었는데 저번주처럼은 되고 싶지 않다는 마음 때문인지 오랜 시간을 집중해서 학습할 수 있었다.\n반효경 교수님의 운영체제 강의를 통해 프로세스, 스레드에 대해 학습했고 현재 스케줄링은 간단하게 내용만 봤다. 스케줄링 알고리즘은 내일 시간내서 학습해보려고 한다.</p>\n<h4 id=\"notion-학습-정리\" style=\"position:relative;\"><a href=\"#notion-%ED%95%99%EC%8A%B5-%EC%A0%95%EB%A6%AC\" aria-label=\"notion 학습 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Notion 학습 정리</h4>\n<ul>\n<li><a href=\"https://kale02.notion.site/24049261b0af41299730fd36a41a67a0\">프로세스</a></li>\n<li><a href=\"https://kale02.notion.site/7a111fa7b91742b1b7c34df48404fb7d\">스레드</a></li>\n<li><a href=\"https://kale02.notion.site/CPU-75dbe4bc9cc440d3a7e2325eb0b21733\">스케줄링</a></li>\n</ul>\n<br>\n<h3 id=\"-좋았던-점\" style=\"position:relative;\"><a href=\"#-%EC%A2%8B%EC%95%98%EB%8D%98-%EC%A0%90\" aria-label=\" 좋았던 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🟢 좋았던 점</h3>\n<hr>\n<ul>\n<li>주말 이후라서 그런지 집중력이 평소보다 좋았던것 같다.</li>\n<li>동료들이랑 궁금한거나 막히는 부분들을 평소보다 잘 나눴다.</li>\n</ul>\n<br>\n<h3 id=\"-아쉬웠던-점\" style=\"position:relative;\"><a href=\"#-%EC%95%84%EC%89%AC%EC%9B%A0%EB%8D%98-%EC%A0%90\" aria-label=\" 아쉬웠던 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔴 아쉬웠던 점</h3>\n<hr>\n<ul>\n<li>개인 공부 시간을 못가졌다.</li>\n<li>미션 설계가 너무 부실하다. 다른 동료들의 설계를 보니 정말 세세한 부분까지 고려를 한걸 보고 반성하게 된다. 이정도면 된다라는 생각이 자꾸 있다.</li>\n</ul>\n<br>\n<h3 id=\"-개선점\" style=\"position:relative;\"><a href=\"#-%EA%B0%9C%EC%84%A0%EC%A0%90\" aria-label=\" 개선점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🟡 개선점</h3>\n<hr>\n<ul>\n<li>할게 진짜 많은데 시간 잘 관리해보자!</li>\n<li>동료들 설계를 보면서 배우자!</li>\n</ul>","frontmatter":{"date":"January 24, 2022","title":"TIL-220124","categories":"TIL","author":"포키","emoji":"📝"},"fields":{"slug":"/til/01/2022-01-24-til/"}},"site":{"siteMetadata":{"siteUrl":"https://seokho-ham.github.io","comments":{"utterances":{"repo":"seokho-ham/blog-comments"}}}}},"pageContext":{"slug":"/til/01/2022-01-22-til/","nextSlug":"/til/01/2022-01-20-til/","prevSlug":"/til/01/2022-01-24-til/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}