{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/spring/osiv/",
    "result": {"data":{"cur":{"id":"929e8af9-66b2-5012-8b89-554df0e026d4","html":"<h2 id=\"서론\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%A1%A0\" aria-label=\"서론 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서론</h2>\n<p>이번 글은 IssueTracker 프로젝트를 진행하면서 겪었던 영속성 컨텍스트와 관련된 문제를 맞닥트리면서 알게 된 OSIV라는 개념을 정리해보기 위해 작성하게 되었다.</p>\n<p><strong>고민</strong> : 미션을 진행하며 대부분의 api에서 유저의 정보가 필요할것이라고 판단했고, 매번 유저를 조회하는 코드의 중복을 제거하고 싶었다.</p>\n<p><strong>해결책</strong> : jwt 토큰을 통해 받은 유저의 id를 사용해 인터셉터에서 미리 유저 객체를 조회한 뒤, <code class=\"language-text\">ArgumentResolver</code> 를 사용해서 해당 유저 객체를 컨트롤러에서 파라미터로 받아서 사용하기로 했다.</p>\n<p>하지만 예상하지 못한 문제가 발생했다.</p>\n<blockquote>\n<p><strong>인터셉터에서 조회해서 컨트롤러에서 넘겨받은 유저 객체는 영속성 컨텍스트에서 관리해주지 않았다.</strong></p>\n</blockquote>\n<p>원인은 <strong>영속성 컨텍스트가 생성되는 시점</strong>이 우리가 등록한 <strong>인터셉터가 실행된 이후</strong>였기 때문이다.\n함께 원인을 찾던 중 영속성 컨텍스트의 생명주기에 대해 서로 다르게 알고 있었는데 토리는 “트랜잭션 단위”, 나는 “요청 단위”로 알고 있었다. (학습해본 결과 둘다 맞는 이야기다.)\n해당 개념을 확실하게 알아두기 위해 조금 더 파보았다.</p>\n<h2 id=\"스프링에서의-영속성-컨텍스트-생명-주기-\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81%EC%97%90%EC%84%9C%EC%9D%98-%EC%98%81%EC%86%8D%EC%84%B1-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%83%9D%EB%AA%85-%EC%A3%BC%EA%B8%B0-\" aria-label=\"스프링에서의 영속성 컨텍스트 생명 주기  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링에서의 영속성 컨텍스트 생명 주기 🚴🏻</h2>\n<p>컨테이너에서 관리하는 EntityManager를 사용하는 경우 영속성 컨텍스트의 생명주기는 컨테이너에 의해 관리되는데, 스프링 컨테이너는 기본적으로 <strong>트랜잭션 단위로 영속성 컨텍스트를 관리</strong>한다. 즉, 하나의 트랜잭션이 시작할때 영속성 컨텍스트가 생성되고 트랜잭션이 종료될 때 영속성 컨텍스트도 함께 종료되며 보통은 서비스 레이어에서 트랜잭션의 시작과 종료가 이루어지게 된다.</p>\n<p>이 말은 곧 서비스 레이어에서만 영속성 컨텍스트에 접근할 수 있다는 의미이다. 여기서 한가지 질문이 생긴다.</p>\n<blockquote>\n<p><strong>영속성 컨텍스트가 종료된 이후에 뷰 레이어에서 사용하던 지연로딩은 어떻게 가능한걸까?</strong></p>\n</blockquote>\n<p>말로만 설명하면 이해가 안될것 같아서 간단한 예시 코드를 작성해봤다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\">\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Issue</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token annotation punctuation\">@OneToMany</span><span class=\"token punctuation\">(</span>mappedBy<span class=\"token operator\">=</span><span class=\"token string\">\"issue\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Comment</span><span class=\"token punctuation\">></span></span> comments <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IssueDto</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">private</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CommentDto</span><span class=\"token punctuation\">></span></span> comments <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ArrayList</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">IssueDto</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Issue</span> issue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>comments <span class=\"token operator\">=</span> <span class=\"token function\">convertCommentsToCommentsDto</span><span class=\"token punctuation\">(</span>issue<span class=\"token punctuation\">.</span><span class=\"token function\">getComments</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CommentDto</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">convertCommentsToCommentsDto</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Comment</span><span class=\"token punctuation\">></span></span> comments<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> comments<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">CommentDto</span><span class=\"token operator\">::</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">)</span>\n              <span class=\"token punctuation\">.</span><span class=\"token function\">collect</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collectors</span><span class=\"token punctuation\">.</span><span class=\"token function\">toList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">//Service</span>\n<span class=\"token annotation punctuation\">@Transactional</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IssueService</span> <span class=\"token punctuation\">{</span> \n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">Issue</span> <span class=\"token function\">findIssue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token class-name\">Issue</span> issue <span class=\"token operator\">=</span> issueRepository<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> issue<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//Controller</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">IssueController</span> <span class=\"token punctuation\">{</span>\n\n  <span class=\"token annotation punctuation\">@GetMapping</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/issue\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">IssueDto</span> <span class=\"token function\">getIssue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IssueDto</span><span class=\"token punctuation\">(</span>issueService<span class=\"token punctuation\">.</span><span class=\"token function\">findIssue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<p><strong>&#x3C;동작과정></strong></p>\n<ol>\n<li>사용자가 이슈를 조회한다.</li>\n<li>서비스에서 Issue 엔티티 객체를 찾아온다.</li>\n<li>조회한 Issue 엔티티 객체를 Controller에서 IssueDto 형태로 변환해서 리턴한다.</li>\n<li>IssueDto 내부에서 변환하는 과정에서 comments 리스트에 접근하는데 이때 <strong>지연로딩</strong>이 발생한다.</li>\n</ol>\n<p>분명 영속성 컨텍스트가 트랜잭션 단위로 관리된다면, 영속성 컨텍스트는 종료된 상태일텐데 어떻게 지연로딩이 발생할까?</p>\n<p><strong>그건 바로 OSIV 때문이다.</strong></p>\n<h2 id=\"-osiv란\" style=\"position:relative;\"><a href=\"#-osiv%EB%9E%80\" aria-label=\" osiv란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💫 OSIV란?</h2>\n<p>Open-Session-In-View의 약자인데, 한마디로 <strong>뷰 레이어에서도 세션을 열어두겠다는 의미</strong>다.<br>\n(JPA에서는 EntityManager, JPA의 구현체인 Hibernate에서는 Session이라고 부른다.)</p>\n<p>OSIV를 사용할 경우 사용자의 요청이 발생하면 영속성 컨텍스트가 생성되고 요청이 종료될때 컨텍스트도 종료된다.<br>\n즉, 생명주기가 <strong>트랜잭션 단위 -> 요청 단위</strong> 로 변경되는 것이다.</p>\n<p>스프링 부트에서는 기본적으로 OSIV 설정을 true로 설정해준다. 이 개념을 모른다면 나처럼 영속성 컨텍스트는 원래 요청단위로 생성되는것이라고 알고 있을 수 밖에 없다;;</p>\n<blockquote>\n<p>설정을 바꾸려면 application-properties에서 false로 변경해주면 된다. false로 설정하면 트랜잭션 단위로 관리된다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">//application-properties</span>\n\nspring<span class=\"token punctuation\">.</span>jpa<span class=\"token punctuation\">.</span><span class=\"token keyword\">open</span><span class=\"token operator\">-</span>in<span class=\"token operator\">-</span>view<span class=\"token operator\">=</span><span class=\"token boolean\">false</span></code></pre></div>\n<h2 id=\"-osiv의-장단점\" style=\"position:relative;\"><a href=\"#-osiv%EC%9D%98-%EC%9E%A5%EB%8B%A8%EC%A0%90\" aria-label=\" osiv의 장단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💫 OSIV의 장/단점</h2>\n<p>장점으로는 앞서 보았던 <strong>뷰 레이어에서도 지연로딩을 사용할 수 있게 된다는 장점</strong>이 생긴다.</p>\n<p>하지만 동시에 단점도 존재하는데 영속성 컨텍스트가 존재한다는 것은 하나의 DB 커넥션을 사용한다는 것이다. 사용자의 요청을 처리하는 스레드의 개수에 비해 DB 커넥션의 개수는 적다. 즉, <strong>트래픽이 많은 서비스 같은 경우 하나의 요청에서 커넥션을 너무 오래 잡고 있어서 서비스 장애로 이어질 수 있다</strong>. (특히 해당 요청 내에서 I/O작업과 같이 시간이 소요되는 작업이 발생할 경우, 그만큼 커넥션을 오래 잡고 있게 된다.)\n또한 하나의 요청에서 2개 이상의 트랜잭션이 발생했을 경우, 동일한 영속성 컨텍스트를 공유하기 때문에 기존에 영속상태에 있던 엔티티를 의도치 않게 변경할 수 있다는 위험성도 존재한다.</p>\n<h2 id=\"-마무리\" style=\"position:relative;\"><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\" 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤔 마무리</h2>\n<p>이번 기회를 통해 OSIV에 대해 알게 되었다.<br>\nOSIV를 사용하는것에 대해 좋고 나쁘고는 없는것 같다. OSIV를 켜두면 편하게 어디서든 지연로딩을 통해 접근할 수 있지만, 성능이슈가 발생할 수 있으며 안정성에도 문제가 생길 수 있다. 반대로 꺼두면 성능적인 안전성은 가져갈 수 있지만, 뷰 레이어에서 지연로딩이 지원되지 않기 때문에 fetch join을 통해 엔티티를 조회할 때 미리 데이터를 가져와야한다.<br>\n결국 각 서비스의 특성에 맞춰서 사용하면 될 것 같다.</p>\n<h3 id=\"참고-문서\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EB%AC%B8%EC%84%9C\" aria-label=\"참고 문서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 문서</h3>\n<ul>\n<li><a href=\"https://www.baeldung.com/spring-open-session-in-view\">Baeldung - A Guide to Spring’s Open Session In View</a></li>\n<li><a href=\"https://kingbbode.tistory.com/27\">킹뽀대님의 Spring - Open Session In View</a></li>\n<li><a href=\"https://stylishc.tistory.com/150\">영속성 관리</a></li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#%EC%84%9C%EB%A1%A0\">서론</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81%EC%97%90%EC%84%9C%EC%9D%98-%EC%98%81%EC%86%8D%EC%84%B1-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%83%9D%EB%AA%85-%EC%A3%BC%EA%B8%B0-\">스프링에서의 영속성 컨텍스트 생명 주기 🚴🏻</a></p>\n</li>\n<li>\n<p><a href=\"#-osiv%EB%9E%80\">💫 OSIV란?</a></p>\n</li>\n<li>\n<p><a href=\"#-osiv%EC%9D%98-%EC%9E%A5%EB%8B%A8%EC%A0%90\">💫 OSIV의 장/단점</a></p>\n</li>\n<li>\n<p><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\">🤔 마무리</a></p>\n<ul>\n<li><a href=\"#%EC%B0%B8%EA%B3%A0-%EB%AC%B8%EC%84%9C\">참고 문서</a></li>\n</ul>\n</li>\n</ul>\n</div>","excerpt":"서론 이번 글은 IssueTracker 프로젝트를 진행하면서 겪었던 영속성 컨텍스트와 관련된 문제를 맞닥트리면서 알게 된 OSIV라는 개념을 정리해보기 위해 작성하게 되었다. 고민 : 미션을 진행하며 대부분의 api에서 유저의 정보가 필요할것이라고 판단했고, 매번 유저를 조회하는 코드의 중복을 제거하고 싶었다. 해결책 : jwt 토큰을 통해 받은 유저의 id를 사용해 인터셉터에서 미리 유저 객체를 조회한 뒤,  를 사용해서 해당 유저 객체를 컨트롤러에서 파라미터로 받아서 사용하기로 했다. 하지만 예상하지 못한 문제가 발생했다. 인터셉터에서 조회해서 컨트롤러에서 넘겨받은 유저 객체는 영속성 컨텍스트에서 관리해주지 않았다. 원인은 영속성 컨텍스트가 생성되는 시점이 우리가 등록한 인터셉터가 실행된 이후였기 때문이다.\n함께 원인을 찾던 중 영속성 컨텍스트의 생명주기에 대해 서로 다르게 알고 있었는데 토리는 “트랜잭션 단위”, 나는 “요청 단위”로 알고 있었다. (학습해본 결과 둘다 맞는 …","frontmatter":{"date":"June 26, 2022","title":"OSIV란?","categories":"스프링","author":"포키","emoji":"🍀"},"fields":{"slug":"/spring/osiv/"}},"next":{"id":"17884b77-6680-5086-8bc7-44c44ca2e2c9","html":"<h2 id=\"-하루-일과\" style=\"position:relative;\"><a href=\"#-%ED%95%98%EB%A3%A8-%EC%9D%BC%EA%B3%BC\" aria-label=\" 하루 일과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🛎 <strong>하루 일과</strong></h2>\n<blockquote>\n<p>10:00 ~ 10:30 데일리 스크럼<br>\n10:30 ~ 12:30 Issue Tracker 프로젝트<br>\n15:00 ~ 16:00 무신사 컴퍼니데이<br>\n16:00 ~ 17:30 Issue Tracker 프로젝트</p>\n</blockquote>\n<br>\n<h2 id=\"-issue-tracker-9일차\" style=\"position:relative;\"><a href=\"#-issue-tracker-9%EC%9D%BC%EC%B0%A8\" aria-label=\" issue tracker 9일차 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤝 Issue Tracker 9일차</h2>\n<hr>\n<h3 id=\"-작업\" style=\"position:relative;\"><a href=\"#-%EC%9E%91%EC%97%85\" aria-label=\" 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📝 작업</h3>\n<ul>\n<li>인터셉터에서 유저 객체를 조회하는 대신 유저 id만 넘겨주도록 변경</li>\n<li>유저 정보 조회 api 구현</li>\n<li>pr 리뷰 반영</li>\n</ul>\n<hr>\n<h3 id=\"-고민사항\" style=\"position:relative;\"><a href=\"#-%EA%B3%A0%EB%AF%BC%EC%82%AC%ED%95%AD\" aria-label=\" 고민사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💭 고민사항</h3>\n<h3 id=\"핸들러-인터셉터와-영속성-컨텍스트-실행-시점\" style=\"position:relative;\"><a href=\"#%ED%95%B8%EB%93%A4%EB%9F%AC-%EC%9D%B8%ED%84%B0%EC%85%89%ED%84%B0%EC%99%80-%EC%98%81%EC%86%8D%EC%84%B1-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%8B%A4%ED%96%89-%EC%8B%9C%EC%A0%90\" aria-label=\"핸들러 인터셉터와 영속성 컨텍스트 실행 시점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>핸들러 인터셉터와 영속성 컨텍스트 실행 시점</h3>\n<p>어제 막혔던 부분을 산토리와 함께 고민하다가 원인을 발견했다.</p>\n<p>OSIV라는 개념이 있다.\nOpen Session In View인데, 기본적으로 영속성 컨텍스트는 트랜잭션이 시작되는 시점에 생겨서 트랜잭션이 종료되면 함께 사라진다. 즉, <strong>같은 생명주기</strong>를 갖는다.\n하지만 Spring에서 기본적으로 OSIV 설정이 <code class=\"language-text\">true</code>로 되어 있는데, 이는 Service 레이어에서 트랜잭션이 종료된 이후에도 영속성 컨텍스트가 살아있어서 UI 레이어에서까지 사용할 수 있다는 의미다.</p>\n<p>그렇다면 OSIV 기본 설정이 true인데 왜 인터셉터에서 조회한 엔티티 객체는 영속성 컨텍스트에서 관리가 되지 않았을까?</p>\n<blockquote>\n<p><code class=\"language-text\">영속성 컨텍스트</code>가 생성되는 시점보다 <code class=\"language-text\">핸들러 인터셉터</code> 가 실행되는 시점이 앞서 있기 때문이다.</p>\n</blockquote>\n<p>핸들러 인터셉터가 실행되는 시점에는 영속성 컨텍스트가 생성되지 않았기 때문에 Repository에서 조회를 하더라도 영속성 컨텍스트에 들어가지를 않는다. 실제로 3번 연달아서 조회를 해본 결과 모두 다른 객체가 반환된다.\n위의 문제를 해결하기 위해서 ArgumentResolver에서 조회를 할까 했지만, 현재 로직 상 유저를 모든 api에서 조회할 필요는 없다고 느껴져서 userId를 그냥 넘겨주도록 수정했다.</p>\n<p>원인을 찾느라 오전 시간을 모두 사용했지만 그만큼 값진 삽질이었다.<br>\n우테코 블로그에 해당 내용에 대한 글 덕분에 원인을 명확히 알 수 있었다. 글 링크를 첨부한다.</p>\n<ul>\n<li><a href=\"https://tecoble.techcourse.co.kr/post/2020-11-03-osiv_with_interceptor/\">우테코 글 링크</a></li>\n</ul>\n<br>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%ED%95%98%EB%A3%A8-%EC%9D%BC%EA%B3%BC\">🛎 <strong>하루 일과</strong></a></p>\n</li>\n<li>\n<p><a href=\"#-issue-tracker-9%EC%9D%BC%EC%B0%A8\">🤝 Issue Tracker 9일차</a></p>\n<ul>\n<li><a href=\"#-%EC%9E%91%EC%97%85\">📝 작업</a></li>\n<li><a href=\"#-%EA%B3%A0%EB%AF%BC%EC%82%AC%ED%95%AD\">💭 고민사항</a></li>\n<li><a href=\"#%ED%95%B8%EB%93%A4%EB%9F%AC-%EC%9D%B8%ED%84%B0%EC%85%89%ED%84%B0%EC%99%80-%EC%98%81%EC%86%8D%EC%84%B1-%EC%BB%A8%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%8B%A4%ED%96%89-%EC%8B%9C%EC%A0%90\">핸들러 인터셉터와 영속성 컨텍스트 실행 시점</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"June 23, 2022","title":"[코드스쿼드] - 220623 TIL","categories":"TIL","author":"포키","emoji":"📝"},"fields":{"slug":"/til/06/2022-06-23-til/"}},"prev":{"id":"8f3e01bf-af33-5fd2-a5c1-d09582624953","html":"<p>백엔드 개발을 공부하기 위해 올해 1월 3일부터 코드스쿼드 백엔드 코스에 참여했고 7월 1일부로 끝이났다.<br>\n🤒코로나 이슈😷로 조금 늦은 회고를 작성해본다.</p>\n<img src=\"https://user-images.githubusercontent.com/57708971/178139859-090ba006-3395-4ef3-b094-2a293e119b42.jpeg\" width=\"500px\">\n<hr>\n<h2 id=\"-코드스쿼드-이전\" style=\"position:relative;\"><a href=\"#-%EC%BD%94%EB%93%9C%EC%8A%A4%EC%BF%BC%EB%93%9C-%EC%9D%B4%EC%A0%84\" aria-label=\" 코드스쿼드 이전 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💩 코드스쿼드 이전</h2>\n<p>20년도 3월부터 8월까지 다른 부트캠프에서 6개월짜리 웹 풀스택 과정을 수강했고, 이때 개발을 제대로 접해보게 되었다. 시작할때까지만 하더라도 해당 과정이 끝나면 개발자로 취업할 준비가 되겠지라는 생각을 가지고 있었다.</p>\n<p>자바스크립트를 시작으로 리액트, 노드를 배웠고 프로젝트까지 했지만 수료 후 스스로를 돌아보니 뭐 하나 제대로 알고 있는게 없었다.\n또한 서버개발자를 생각하고 준비했지만, 내가 경험한 내용들은 프론트에서 사용되는 스택에 더 집중되어 있다고 생각되어서 프론트 개발자를 목표로 바꾸기로 결심하고 1년간 개인 공부를 진행했다.</p>\n<img src=\"https://user-images.githubusercontent.com/57708971/178134441-cf19c6f2-0311-444e-8673-f3d4ef348580.jpeg\" width=\"300px\">\n<br>\n<p>개인 공부를 했다고 하지만 지금 돌아보면 공부를 정말 안했다. 서버와 통신해서 데이터를 요청하고 받아오는 작업은 그나마 할만했지만, 뷰를 그리는 작업, 특히 css는 작업은 정말 재미가 없었고 학습에 대한 의지도 안생겼다. 중간중간 지금이라도 자바를 공부할까 싶었지만 너무 늦었다는 생각에 의미없이 시간만 보냈던것 같다.</p>\n<p>수료한지 1년이 되었을 시점에는 더이상 이대로는 안되겠다는 생각이 들었고, 9월부터 1달동안 고민끝에 자바와 스프링부터 다시 공부해서 백엔드 개발자가 되기로 결심했다.\n1년간 확실해진건 나는 강제성과 함께 하는 사람들이 어느정도 있어야 더 집중을 잘한다는 사실이었다. 그래서 바로 교육과정을 알아보았고, 우테코와 코드스쿼드 딱 두군데를 목표로 잡고 준비했다.</p>\n<p>코드스쿼드에 지원한 가장 큰 이유는 두가지였다.</p>\n<ul>\n<li>교육 일정에서 기본기를 중요시하는 느낌을 받음.</li>\n<li>시험을 통해 선발하기에 열정있는 사람들이 모일것이라고 예상됨.</li>\n</ul>\n<p>우테코는 1차에서 광탈했지만, 코드스쿼드는 다행히 합격할 수 있었다.<br>\n(이때는 1차, 2차 결과를 기다리며 혹시 떨어지면 어떻게 해야하나 생각하며 잠도 제대로 못잤었던것 같다.😭)</p>\n<hr>\n<h2 id=\"-코드스쿼드--함께-자라기\" style=\"position:relative;\"><a href=\"#-%EC%BD%94%EB%93%9C%EC%8A%A4%EC%BF%BC%EB%93%9C--%ED%95%A8%EA%BB%98-%EC%9E%90%EB%9D%BC%EA%B8%B0\" aria-label=\" 코드스쿼드  함께 자라기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤝 코드스쿼드 == 함께 자라기</h2>\n<p>코드스쿼드 과정을 한마디로 표현하면 <strong><code class=\"language-text\">함께 자라기</code></strong> 가 될 것 같다.</p>\n<h3 id=\"-지식과-경험의-공유-\" style=\"position:relative;\"><a href=\"#-%EC%A7%80%EC%8B%9D%EA%B3%BC-%EA%B2%BD%ED%97%98%EC%9D%98-%EA%B3%B5%EC%9C%A0-\" aria-label=\" 지식과 경험의 공유  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>💭 지식과 경험의 공유 📝</h3>\n<blockquote>\n<p><strong>다들 질문하는걸 부끄러워하지 않고, 도와주는것을 주저하지 않는다.</strong></p>\n</blockquote>\n<p>멤버들은 미션을 진행하면서 새롭게 알게된 내용 혹은 삽질했던 경험을 슬랙이나 디코에 공유함으로써 서로에게 도움을 준다.\n미션 진행 중 막히거나 고민되는 부분은 공개된 자리에서 서로의 생각을 나누며 해결책을 찾는다. 더 놀라운건 기수에 상관없이 이미 수료한 이전기수분들도 기꺼이 도와준다.\n이런 환경은 신기하게도 점점 코드스쿼드 내부의 문화로 정착되어 갔다.</p>\n<p>물론 나는 어려워했다. 내 질문은 괜히 별거 아닌거같고, 내 답변에 대한 자신감이 없었다.<br>\n사람들에게 도움만 많이 받은것 같아서 이 부분은 아쉬움이 많이 남는 부분이다.</p>\n<h3 id=\"-협업-\" style=\"position:relative;\"><a href=\"#-%ED%98%91%EC%97%85-\" aria-label=\" 협업  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🕺🏻 협업 💃🏻</h3>\n<p>나는 의도하지 않았지만 신기하게도 4번의 프로젝트 모두 <strong>페어 프로그래밍</strong>으로 진행하게 됐다. 또한, 리뷰어 운도 나쁘지 않아서 대부분 좋은 분들을 만났다.\n덕분에 여러 멤버들의 코딩 스타일을 접했고, 각자가 가진 강점들을 배웠다. 또한 실시간으로 코드에 대해 의견을 나누는 경험 또한 남들보다 많이 할 수 있었다.</p>\n<p>물론 페어 프로그래밍은 계속 말을 해야하기 때문에 에너지 소모가 크고 개발 속도가 느리다.\n하지만 혼자라면 놓쳤을 부분들을 놓치지 않을 수 있었고 가독성 좋은 변수명, 객체지향적인 코드인지 등에 대해 의견을 주고받으며 더 나은 코드를 작성할 수 있었다. 또한 서로가 모르는 부분들을 페어 덕분에 알게 되는 경우도 많았다.</p>\n<p>현업에서는 일을 분담해서 개인적으로 개발을 진행하는 경우가 대부분일테니 페어 프로그래밍을 할 수 있을때 최대한 많이 경험할 수 있어서 감사하다.\n4번의 프로젝트동안 함께해준 <code class=\"language-text\">데이브</code>, <code class=\"language-text\">얀</code>, <code class=\"language-text\">나단</code>, <code class=\"language-text\">산토리</code>에게 무한 감사를 🙇🏻‍♂️</p>\n<p>코드스쿼드의 경험 덕분에 내가 꿈꾸는 개발자의 모습에 한가지가 더 추가됐다.</p>\n<blockquote>\n<p><strong>같이 일하고 싶은 사람. 긍정적인 영향을 주는 사람.</strong></p>\n</blockquote>\n<p>물론 현재는 많이 부족하지만, 내년에는 원하는 모습에 더 가까워진 사람이 됐으면 한다. 💪🏻</p>\n<hr>\n<h2 id=\"-그래서-현재의-나는\" style=\"position:relative;\"><a href=\"#-%EA%B7%B8%EB%9E%98%EC%84%9C-%ED%98%84%EC%9E%AC%EC%9D%98-%EB%82%98%EB%8A%94\" aria-label=\" 그래서 현재의 나는 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤔 그래서 현재의 나는?</h2>\n<h3 id=\"-내가-무엇을-해야하는지-안다\" style=\"position:relative;\"><a href=\"#-%EB%82%B4%EA%B0%80-%EB%AC%B4%EC%97%87%EC%9D%84-%ED%95%B4%EC%95%BC%ED%95%98%EB%8A%94%EC%A7%80-%EC%95%88%EB%8B%A4\" aria-label=\" 내가 무엇을 해야하는지 안다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🛣 내가 무엇을 해야하는지 안다.</h3>\n<p>이전에는 시간에 쫓기며 누군가가 개척해놓은 개발자가 되는 지름길을 찾아서 쫓아 가려고 했다.<br>\n그리고 내가 현재 학습하는 길이 혹시나 돌아가는 길이면 어쩌지라는 생각에 주변에 물어보며 내가 제대로 가고 있는지에 대해 확신을 구하려고 했다.</p>\n<blockquote>\n<p><strong>이제는 내가 가는 길에 확신이 있다.</strong></p>\n</blockquote>\n<p>취업에 대한 근자감이 있는건 아니다.<br>\n하지만 절대 지름길은 없다는걸 깨달았다.\n그리고 지금 내가 어떤것이 부족한지, 어떻게 채워나가야할지를 안다. 더 나아가 꾸준히 채워나간다면 좋은 결과가 뒤따라올것이라는 사실까지!</p>\n<h3 id=\"-내-생각을-말하는게-조금-더-편해졌다\" style=\"position:relative;\"><a href=\"#-%EB%82%B4-%EC%83%9D%EA%B0%81%EC%9D%84-%EB%A7%90%ED%95%98%EB%8A%94%EA%B2%8C-%EC%A1%B0%EA%B8%88-%EB%8D%94-%ED%8E%B8%ED%95%B4%EC%A1%8C%EB%8B%A4\" aria-label=\" 내 생각을 말하는게 조금 더 편해졌다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🗣 내 생각을 말하는게 조금 더 편해졌다.</h3>\n<p>나는 원래 내 의견을 말하는걸 잘 못한다. 주변 사람들 눈치를 많이 보는 성격이기도 하고, 틀린 의견을 내는것을 두려워하는 성격이다. 하지만 6개월동안 좋은 환경에 있다보니 조금의 뻔뻔함(?)이 생겼다.</p>\n<p><strong>“틀리면 고치면 되지”</strong> 라는 마인드가 탑재됐다.<br>\n경험상 내가 틀렸던 내용들은 쉽게 기억에서 잊혀지지 않는다. 또한 개발자라는 직업을 가진 사람들은 이런걸로 문제삼지 않는다. 오히려 제대로 모르는 내용을 가지고 조용히 있는게 훗날 더 큰 문제를 만든다.<br>\n(물론 말도 안되는 헛소리라면 얘기가 달라지겠지만;;)</p>\n<hr>\n<h2 id=\"-마무리\" style=\"position:relative;\"><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\" aria-label=\" 마무리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🔚 마무리</h2>\n<p>6개월이 지난 지금 “개발자로 취업할 준비가 됐냐” 라고 묻는다면 “아직?”이라고 답할것이다.<br>\n하지만 분명 발전이 있었고 얻은것들 또한 명확하다.</p>\n<ul>\n<li>어떤 개발자가 되고 싶은지가 명확해졌다.</li>\n<li>좋은 개발자가 되기 위해 필요한 기초체력을 키웠다.</li>\n<li>함께할 좋은 동료들이 생겼다.</li>\n</ul>\n<p>남은 하반기동안은 그동안 배운것들을 잘 갈고 닦아서 스스로를 당당하게 개발자라고 소개할 수 있었으면 좋겠다.</p>\n<img src=\"https://user-images.githubusercontent.com/57708971/178139827-e57d5d7b-e3a3-46af-9b3b-fe4c33f617a1.jpeg\">\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-%EC%BD%94%EB%93%9C%EC%8A%A4%EC%BF%BC%EB%93%9C-%EC%9D%B4%EC%A0%84\">💩 코드스쿼드 이전</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%BD%94%EB%93%9C%EC%8A%A4%EC%BF%BC%EB%93%9C--%ED%95%A8%EA%BB%98-%EC%9E%90%EB%9D%BC%EA%B8%B0\">🤝 코드스쿼드 == 함께 자라기</a></p>\n<ul>\n<li><a href=\"#-%EC%A7%80%EC%8B%9D%EA%B3%BC-%EA%B2%BD%ED%97%98%EC%9D%98-%EA%B3%B5%EC%9C%A0-\">💭 지식과 경험의 공유 📝</a></li>\n<li><a href=\"#-%ED%98%91%EC%97%85-\">🕺🏻 협업 💃🏻</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EA%B7%B8%EB%9E%98%EC%84%9C-%ED%98%84%EC%9E%AC%EC%9D%98-%EB%82%98%EB%8A%94\">🤔 그래서 현재의 나는?</a></p>\n<ul>\n<li><a href=\"#-%EB%82%B4%EA%B0%80-%EB%AC%B4%EC%97%87%EC%9D%84-%ED%95%B4%EC%95%BC%ED%95%98%EB%8A%94%EC%A7%80-%EC%95%88%EB%8B%A4\">🛣 내가 무엇을 해야하는지 안다.</a></li>\n<li><a href=\"#-%EB%82%B4-%EC%83%9D%EA%B0%81%EC%9D%84-%EB%A7%90%ED%95%98%EB%8A%94%EA%B2%8C-%EC%A1%B0%EA%B8%88-%EB%8D%94-%ED%8E%B8%ED%95%B4%EC%A1%8C%EB%8B%A4\">🗣 내 생각을 말하는게 조금 더 편해졌다.</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%EB%A7%88%EB%AC%B4%EB%A6%AC\">🔚 마무리</a></p>\n</li>\n</ul>\n</div>","frontmatter":{"date":"July 10, 2022","title":"2022년 코드스쿼드 회고","categories":"회고","author":"포키","emoji":"💭"},"fields":{"slug":"/summary/codesquad/"}},"site":{"siteMetadata":{"siteUrl":"https://seokho-ham.github.io","comments":{"utterances":{"repo":"seokho-ham/blog-comments"}}}}},"pageContext":{"slug":"/spring/osiv/","nextSlug":"/til/06/2022-06-23-til/","prevSlug":"/summary/codesquad/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}