{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/자바",
    "result": {"pageContext":{"currentCategory":"자바","categories":["All","자바","회고","스프링","TIL"],"edges":[{"node":{"id":"bbb8f898-372d-5376-9f72-34a347a918a2","excerpt":"연산자 연산을 수행하는 기호를 의미한다. 1. 단항 연산자 단항 연산자는 증감 연산자와 부호 연산자로 나뉜다. <증감 연산자> 피연산자의 값을 증감 시키는데, 피연산자의 앞에 사용하냐 뒤에 사용하냐에 따라 결과가 달라진다. 위의 코드를 보면 알 수 있듯이 앞에 붙을 경우 연산을 수행한 후 변수를 출력하는데 사용한다. 뒤에 붙을 경우 변수를 출력하는데 사용한 뒤, 연산을 수행한다. <부호 연산자> 피연산자의 부호를 결정하는 연산자다. 2. 산술 연산자 사칙 연산과 나머지를 구하는 연산을 의미한다. +, -, *, /, % 다른 연산들은 일반적인 연산과 동일하지만 나눗셈의 경우 타입에 따라 결과가 달라진다. 정수로 정수를 나눌 경우 반올림 없이 소수점은 버려진다. 즉, 정확한 결과값이 나오지 않을 수 있기 때문에 한쪽을 실수형으로 변환해서 계산하는것이 좋다. 주의할 점 정수 타입의 값은 0으로 나눌 수 없다. char 타입도 연산이 가능한데, 해당 문자의 유니코드 값으로 변경이 된다.…","fields":{"slug":"/java/whiteship-3/"},"frontmatter":{"categories":"자바","title":"[Whiteship] 3주차 연산자","date":"August 07, 2022"}},"next":{"fields":{"slug":"/summary/codesquad/"}},"previous":null},{"node":{"id":"44218a27-bf02-541f-8497-df1aa57ff093","excerpt":"MVC 패턴 코드를 기능에 따라 나눠주는 패러다임 도메인(Model)과 UI(View)이 분리되어 관리되기 때문에 서로에게 영향을 주지 않는다. 즉, 기능확장과 유지보수가 편리해진다. Model, View, Controller로 나뉜다. 1. Model 애플리케이션과 관련된 데이터, 비즈니스 로직을 담당한다. Model에서는 View, Controller에 대한 의존성을 가지면 안된다. 2. View 사용자로부터 받는 입력, 사용자에게 제공하는 출력 등 UI를 담당한다. View에서는 Controller에 대한 의존성을 가져서는 안된다. (Model에 대한 의존성은 괜찮다.) View는 Model로부터 데이터를 받을때 사용자에게 다르게 보여지는 부분들에 대해서만 받아야한다. 3. Controller Model과 View를 이어주는 역할. View를 통해 들어온 요청사항을 Model에게 전달해주거나 변경사항을 View에게 전달해준다. 반드시 하나의 컨트롤러만 존재해야 하는것은 아니다…","fields":{"slug":"/java/mvc-pattern/"},"frontmatter":{"categories":"자바","title":"[디자인 패턴] - MVC 패턴","date":"March 18, 2022"}},"next":{"fields":{"slug":"/til/03/2022-03-17-til/"}},"previous":{"fields":{"slug":"/spring/why-autowired-is-necessary-in-test/"}}},{"node":{"id":"316eeecb-bf51-5398-8ccf-d4e95b0b8725","excerpt":"인텔리제이를 사용해서 개발을 할때마다 gradle이 뭔지, junit 라이브러리는 어떻게 가져오는건지 궁금했었는데 이참에 간단하게 정리해본다. 빌드와 빌드 도구 보통 우리가 사용하는 프로그래밍 언어는 사람이 알아볼 수 있는 형태로 작성한다. 개발한 앱을 컴퓨터에서 구동하기 위해서는 변환이 필요한데 Java의 경우 개발자가 작성한 소스코드(.java 파일)를 1차적으로 바이트코드(.class 파일)로 변환을 해야하고 이 과정을 컴파일이라고 한다.\n컴파일 결과로 생성된 바이트코드는 실행에 필요한 외부 라이브러리등의 외부 리소스와 함께 하나의 압축파일(.jar)로 만들어지는데 이 과정을 링킹이라고 한다. 앞서 말한 일련의 과정을 빌드라고 한다. 이전에는 이런 빌드 작업을 개발자가 일일히 해서 압축 파일을 폴더에 직접 넣어줘야했다. 이런 번거로운 작업들을 편하게 하기 위해서 빌드 작업을 자동화한 프로그램이 나왔고 이것이 바로 빌드 도구다. 빌드 도구가 하는 일 빌드도구가 해주는 일은 빌드…","fields":{"slug":"/java/build-tools/"},"frontmatter":{"categories":"자바","title":"Java 빌드 도구","date":"January 08, 2022"}},"next":{"fields":{"slug":"/til/01/2022-01-07-til/"}},"previous":{"fields":{"slug":"/til/01/2022-01-10-til/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}