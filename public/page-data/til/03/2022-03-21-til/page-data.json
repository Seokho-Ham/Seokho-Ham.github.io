{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/til/03/2022-03-21-til/",
    "result": {"data":{"cur":{"id":"1c1bbc1a-90ec-5d77-9e06-027eff1c5bab","html":"<h2 id=\"-하루-일과\" style=\"position:relative;\"><a href=\"#-%ED%95%98%EB%A3%A8-%EC%9D%BC%EA%B3%BC\" aria-label=\" 하루 일과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🛎 하루 일과</h2>\n<blockquote>\n<p>10:00 ~ 10:30 데일리 스크럼<br>\n10:30 ~ 12:30 페어 프로그래밍<br>\n14:00 ~ 16:00 마스터 클래스<br>\n16:10 ~ 18:00 페어 프로그래밍<br>\n19:00 ~ 21:00 네트워크 강의 섹션 1-4</p>\n</blockquote>\n<h2 id=\"-학습-회고\" style=\"position:relative;\"><a href=\"#-%ED%95%99%EC%8A%B5-%ED%9A%8C%EA%B3%A0\" aria-label=\" 학습 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👨‍💻 학습 회고</h2>\n<h3 id=\"미션과-페어-프로그래밍\" style=\"position:relative;\"><a href=\"#%EB%AF%B8%EC%85%98%EA%B3%BC-%ED%8E%98%EC%96%B4-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"미션과 페어 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>미션과 페어 프로그래밍</h3>\n<p>웹서버 미션이 주어졌고, 이번 미션은 헤이호와 함께 진행하게 되었다.<br>\n이번 미션을 기간을 http, 웹서버와 네트워크, 소켓 등에 대해서 깊이 학습해보는 시간으로 보내야겠다.</p>\n<h3 id=\"기본적인-클라이언트---서버-통신\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%ED%81%B4%EB%9D%BC%EC%9D%B4%EC%96%B8%ED%8A%B8---%EC%84%9C%EB%B2%84-%ED%86%B5%EC%8B%A0\" aria-label=\"기본적인 클라이언트   서버 통신 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본적인 클라이언트 - 서버 통신</h3>\n<ol>\n<li>Java에서 제공하는 <code class=\"language-text\">ServerSocket</code> 타입의 인스턴스를 생성하면 포트 하나를 열어서 클라이언트의 요청을 기다리는 대기상태가 된다.</li>\n<li>클라이언트의 요청이 들어오면 서버에서 새로운 <code class=\"language-text\">Socket</code>을 만들고, 임의의 포트를 제공한다.</li>\n</ol>\n<ul>\n<li>이때 포트는 0~65535 내의 포트를 사용하는데, 1023번 이하의 포트는 이미 사용되고 있기 때문에 그 위의 번호를 사용한다.</li>\n</ul>\n<ol start=\"3\">\n<li>소켓을 통해 클라이언트와 통신한다.</li>\n<li>서버 소켓은 다시 대기 상태로 돌아간다.</li>\n</ol>\n<h2 id=\"️-느낀점\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EB%8A%90%EB%82%80%EC%A0%90\" aria-label=\"️ 느낀점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙋🏻‍♂️ 느낀점</h2>\n<p>큰 주제가 주어지고 미션을 진행하며 학습을 하다보니 키워드들은 쌓여만 가는데, 해당 키워드들에 대한 학습은 자꾸 나중으로만 미루게 된다.</p>\n<p>매일의 일정을 구체적으로 계획해두고 시간대별로 정해둔 내용들만 집중해서 학습해야겠다. 대신 <strong>지킬 수 있는 작은 계획으로!! 시스템을 만들어보자.</strong></p>","excerpt":"🛎 하루 일과 10:00 ~ 10:30 데일리 스크럼 10:30 ~ 12:30 페어 프로그래밍 14:00 ~ 16:00 마스터 클래스 16:10 ~ 18:00 페어 프로그래밍 19:00 ~ 21:00 네트워크 강의 섹션 1-4 👨‍💻 학습 회고 미션과 페어 프로그래밍 웹서버 미션이 주어졌고, 이번 미션은 헤이호와 함께 진행하게 되었다. 이번 미션을 기간을 http, 웹서버와 네트워크, 소켓 등에 대해서 깊이 학습해보는 시간으로 보내야겠다. 기본적인 클라이언트 - 서버 통신 Java에서 제공하는  타입의 인스턴스를 생성하면 포트 하나를 열어서 클라이언트의 요청을 기다리는 대기상태가 된다. 클라이언트의 요청이 들어오면 서버에서 새로운 을 만들고, 임의의 포트를 제공한다. 이때 포트는 0~65535 내의 포트를 사용하는데, 1023번 이하의 포트는 이미 사용되고 있기 때문에 그 위의 번호를 사용한다. 소켓을 통해 클라이언트와 통신한다. 서버 소켓은 다시 대기 상태로 돌아간다. 🙋🏻‍♂️ 느낀점 큰…","frontmatter":{"date":"March 21, 2022","title":"TIL-220321","categories":"TIL","author":"포키","emoji":"📝"},"fields":{"slug":"/til/03/2022-03-21-til/"}},"next":{"id":"96f2509e-57dd-526a-802d-2e3508fa00bd","html":"<h2 id=\"-학습-회고\" style=\"position:relative;\"><a href=\"#-%ED%95%99%EC%8A%B5-%ED%9A%8C%EA%B3%A0\" aria-label=\" 학습 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👨‍💻 학습 회고</h2>\n<h3 id=\"스프링-미션-3단계\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%94%84%EB%A7%81-%EB%AF%B8%EC%85%98-3%EB%8B%A8%EA%B3%84\" aria-label=\"스프링 미션 3단계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스프링 미션 3단계</h3>\n<ul>\n<li>어제 Repository를 테스트하는데 생성자를 통해서는 의존성이 주입이 되지 않았다. 쿠킴의 도움을 받아 필드에 @Autowired를 붙여줘야 의존성 주입이 된다는걸 알게 되어서 해결했다. 문제 해결과 별개로 이유가 궁금해서 찾아보고 정리했다.</li>\n</ul>\n<blockquote>\n<p><a href=\"https://seokho-ham.github.io/spring/why-autowired-is-necessary-in-junit\">Test에서는 왜 @Autowired 없이는 의존성 주입이 안될까?</a></p>\n</blockquote>\n<h3 id=\"jar-vs-plainjar\" style=\"position:relative;\"><a href=\"#jar-vs-plainjar\" aria-label=\"jar vs plainjar permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.jar vs plain.jar</h3>\n<p>heroku를 사용해 배포할때 안에서 빌드가 된다. 이때 빌드의 결과물로 2개의 jar파일이 생성되는데, heroku에서는 <code class=\"language-text\">*.jar</code> 이런식으로 모든 jar파일을 읽고 실행한다. plain.jar를 실행하는데서 문제가 발생했고, jay의 글 덕분에 문제는 쉽게 해결했다.<br>\n생성되는 2개의 jar파일이 어떤 차이인지 몰라서 간단하게 정리한다.</p>\n<p>Spring Boot 빌드 시 <strong>프로젝트 이름과 버전만 적힌 jar파일</strong>과 <strong>plain까지 함께 적힌 jar파일</strong> 2개가 생긴다.</p>\n<h4 id=\"-plainjar-파일\" style=\"position:relative;\"><a href=\"#-plainjar-%ED%8C%8C%EC%9D%BC\" aria-label=\" plainjar 파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>*-plain.jar 파일</h4>\n<ul>\n<li>Jar task에 의해 생성되는 파일이며 <strong>plain archive</strong>라고 부른다.</li>\n<li>클래스 파일과 리소스 파일 이외의 의존성은 가지지 않는다. 앱 실행에 필요한 의존성들이 없기 때문에 <code class=\"language-text\">java -jar</code> 명령어로 실행이 불가능하다.</li>\n</ul>\n<h4 id=\"jar-파일\" style=\"position:relative;\"><a href=\"#jar-%ED%8C%8C%EC%9D%BC\" aria-label=\"jar 파일 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>*.jar 파일</h4>\n<ul>\n<li>BootJar task에 의해 생성되며 <strong>executable archive</strong>라고 부른다.</li>\n<li>모든 의존성을 가진 jar 파일이며 앱을 정상적으로 실행할 수 있다.</li>\n</ul>\n<p>build.gradle 파일에 아래와 같이 작성하면 jar task를 통해 생성하는건 건너뛸 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"groovy\"><pre class=\"language-groovy\"><code class=\"language-groovy\"><span class=\"token comment\">//build.gradle</span>\n\njar<span class=\"token punctuation\">{</span>\n\tenabled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"date":"March 18, 2022","title":"TIL-220318","categories":"TIL","author":"포키","emoji":"📝"},"fields":{"slug":"/til/03/2022-03-18-til/"}},"prev":{"id":"daf7af4d-1e79-51ba-b165-c8750042d5c6","html":"<h2 id=\"-하루-일과\" style=\"position:relative;\"><a href=\"#-%ED%95%98%EB%A3%A8-%EC%9D%BC%EA%B3%BC\" aria-label=\" 하루 일과 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🛎 하루 일과</h2>\n<blockquote>\n<p>07:00 ~ 08:30 자바의 정석 16장 - 네트워킹<br>\n10:00 ~ 10:30 데일리 스크럼<br>\n10:30 ~ 12:30 페어 프로그래밍<br>\n14:00 ~ 16:00 페어 프로그래밍<br>\n16:00 ~ 17:00 네트워크 강의 섹션 5-6<br>\n17:00 ~ 18:00 그룹 리뷰<br>\n20:00 ~ 22:00 스프링 스터디\n00:30 ~ 01:00 회고 작성</p>\n</blockquote>\n<h2 id=\"-학습-회고\" style=\"position:relative;\"><a href=\"#-%ED%95%99%EC%8A%B5-%ED%9A%8C%EA%B3%A0\" aria-label=\" 학습 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👨‍💻 학습 회고</h2>\n<h3 id=\"미션과-페어-프로그래밍\" style=\"position:relative;\"><a href=\"#%EB%AF%B8%EC%85%98%EA%B3%BC-%ED%8E%98%EC%96%B4-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"미션과 페어 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>미션과 페어 프로그래밍</h3>\n<ul>\n<li>미션 2단계 진행</li>\n<li>http api 설계 방식, http 상태코드</li>\n</ul>\n<h3 id=\"그룹-리뷰\" style=\"position:relative;\"><a href=\"#%EA%B7%B8%EB%A3%B9-%EB%A6%AC%EB%B7%B0\" aria-label=\"그룹 리뷰 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그룹 리뷰</h3>\n<p>멤버들과 각자 진행한 미션의 코드를 공유하는 시간을 가졌다.<br>\n아직까지는 미션의 요구사항이 많지 않아서 대부분 비슷한 방식으로 구현했다. 타니와 루이는 코드 설명에 덧붙여서 각자가 학습하셨던 내용들을 설명해주셨다. 학습하신것을 공유함과 동시에 스스로 다시한번 정리하는 시간이 되겠다는 생각이 드는데 나도 이번주안에 한번은 도전해보자.👍</p>\n<h2 id=\"️-느낀점\" style=\"position:relative;\"><a href=\"#%EF%B8%8F-%EB%8A%90%EB%82%80%EC%A0%90\" aria-label=\"️ 느낀점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🙋🏻‍♂️ 느낀점</h2>\n<p>오늘 스터디가 끝나고 남은 학습을 해야했지만 구구덕의 유혹을 이겨내지 못했다. <strong>당분간 구구덕은 토요일만 하는걸로😭</strong><br>\n시스템을 만들기로 하고 하루도 안되서 저녁 시간 실패.. 내일은 꼭 성공하자.</p>","frontmatter":{"date":"March 22, 2022","title":"TIL-220322","categories":"TIL","author":"포키","emoji":"📝"},"fields":{"slug":"/til/03/2022-03-22-til/"}},"site":{"siteMetadata":{"siteUrl":"https://seokho-ham.github.io","comments":{"utterances":{"repo":"seokho-ham/seokho-ham.github.io"}}}}},"pageContext":{"slug":"/til/03/2022-03-21-til/","nextSlug":"/til/03/2022-03-18-til/","prevSlug":"/til/03/2022-03-22-til/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}