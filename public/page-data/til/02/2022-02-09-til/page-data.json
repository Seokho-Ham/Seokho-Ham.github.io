{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/til/02/2022-02-09-til/",
    "result": {"data":{"cur":{"id":"7e5eae2e-c1ea-5830-aab7-6037b85da0d8","html":"<h2 id=\"-학습-과정\" style=\"position:relative;\"><a href=\"#-%ED%95%99%EC%8A%B5-%EA%B3%BC%EC%A0%95\" aria-label=\" 학습 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👨‍💻 학습 과정</h2>\n<h3 id=\"짝-프로그래밍\" style=\"position:relative;\"><a href=\"#%EC%A7%9D-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"짝 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>짝 프로그래밍</h3>\n<p>오늘은 오후에 75분동안 짝 프로그래밍을 진행했다.<br>\n다른 부트캠프에서 경험해봤던 방식이었지만 네비게이터가 된다는건 여전히 부담이 된다. 네비게이터는 어떤 방식으로 문제를 해결해갈것인지를 이야기 해야하는데 해결책을 빠르게 생각해내야 한다는 부담감 + 부족한 실력 때문에 더 어려운 것 같다.\n그래서 중간중간 막혔던 부분들도 있었는데 데이먼이 의견도 내주고, 기다려주기도 해서 무사히 잘 끝냈다.</p>\n<p>오늘 짝 프로그래밍을 하면서 동료 개발자에게 내 생각을 이야기하며 함께 개발하는게 어렵지만 좋은 방식이라는걸 다시 한번 느끼게 됐다. 이런 과정을 통해 다른 사람들의 문제 해결 방식에 대해서도 배우게 되고 시야가 넓어지는것 같다.<br>\n동시에 <strong>함께 일하고 싶은 개발자</strong>에 대해 고민해보게 되었다.</p>\n<p>깔끔한 설계 능력, 뛰어난 문제 해결 능력, 좋은 코드를 작성하는 능력들도 중요하지만 하나의 서비스를 혼자서 만들어낼 수 없기 때문에 개발에 <strong>협력</strong>은 필수 요소다. 박수도 서로 손뼉이 맞아야 하듯이 협력을 통해 좋은 시너지를 낼려면 상대방과 합이 맞아야한다.\n상대방의 생각을 경청하는 자세, 의견이 다르더라도 맞춰가려고 계속 소통하는 자세, 자신의 생각을 상대방이 이해할 수 있도록 쉽게 설명하는 능력 등이 필요한 것 같다.</p>\n<p>남은 코드스쿼드의 과정동안 개발 지식뿐만 아니라 동료들과의 소통에 있어서도 더 노력해서 함께 일하고 싶은 동료가 되고싶다.</p>\n<h3 id=\"균형\" style=\"position:relative;\"><a href=\"#%EA%B7%A0%ED%98%95\" aria-label=\"균형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>균형</h3>\n<p>코드스쿼드를 시작하기전 과정 안에서 동료들이랑 함께 학습할 수 있는 기회는 최대한 참여해야겠다고 생각을 했다. 스터디에 참여할 기회들이 생겼고 하나둘 늘려갔다.\n하지만 이번주 “내가 미션도 제대로 수행하지 못하는것 같은데 스터디를 하는게 맞을까? 다 잡으려다가 모두 놓치게 되고 있는건 아닌가” 라는 생각이 들었고, 결국 오늘 진행된 스터디는 주어진 분량만 간신히 준비해서 참여하게 됐다.<br>\n추가적으로 발표할 거리를 들고갔으면 좋았을텐데 괜히 욕심냈구나 싶었다. (이해해준 동료들에게 감사..)\n정신없이 보낸 1월 덕분에 내 한계도 명확히 알았고 이제는 균형을 잡아가야겠다.</p>\n<h2 id=\"-좋았던-점\" style=\"position:relative;\"><a href=\"#-%EC%A2%8B%EC%95%98%EB%8D%98-%EC%A0%90\" aria-label=\" 좋았던 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🟢 좋았던 점</h2>\n<ul>\n<li>그래프 이론에 대해 학습하고 이해하게 되었다. 이렇게 알고리즘을 야금야금..</li>\n</ul>\n<h2 id=\"-개선점\" style=\"position:relative;\"><a href=\"#-%EA%B0%9C%EC%84%A0%EC%A0%90\" aria-label=\" 개선점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🟡 개선점</h2>\n<ul>\n<li>\n<p>당일에 스터디 준비하는건 최대한 지양하자.</p>\n<blockquote>\n<p>3일전에는 준비를 해보려고 노력해보자.</p>\n</blockquote>\n</li>\n<li>\n<p>나는 아침형, 올빼미형 둘 다 아닌것 같다;;</p>\n<blockquote>\n<p>맞는 루틴 찾아보기</p>\n</blockquote>\n</li>\n</ul>","excerpt":"👨‍💻 학습 과정 짝 프로그래밍 오늘은 오후에 75분동안 짝 프로그래밍을 진행했다. 다른 부트캠프에서 경험해봤던 방식이었지만 네비게이터가 된다는건 여전히 부담이 된다. 네비게이터는 어떤 방식으로 문제를 해결해갈것인지를 이야기 해야하는데 해결책을 빠르게 생각해내야 한다는 부담감 + 부족한 실력 때문에 더 어려운 것 같다.\n그래서 중간중간 막혔던 부분들도 있었는데 데이먼이 의견도 내주고, 기다려주기도 해서 무사히 잘 끝냈다. 오늘 짝 프로그래밍을 하면서 동료 개발자에게 내 생각을 이야기하며 함께 개발하는게 어렵지만 좋은 방식이라는걸 다시 한번 느끼게 됐다. 이런 과정을 통해 다른 사람들의 문제 해결 방식에 대해서도 배우게 되고 시야가 넓어지는것 같다. 동시에 함께 일하고 싶은 개발자에 대해 고민해보게 되었다. 깔끔한 설계 능력, 뛰어난 문제 해결 능력, 좋은 코드를 작성하는 능력들도 중요하지만 하나의 서비스를 혼자서 만들어낼 수 없기 때문에 개발에 협력은 필수 요소다. 박수도 서로 손뼉이…","frontmatter":{"date":"January 04, 2022","title":"TIL-220104","categories":"TIL","author":"포키","emoji":"📝"},"fields":{"slug":"/til/02/2022-02-09-til/"}},"next":{"id":"d7d6fa6b-93cd-57e2-b817-b963b0f57af8","html":"<h2 id=\"-학습-과정\" style=\"position:relative;\"><a href=\"#-%ED%95%99%EC%8A%B5-%EA%B3%BC%EC%A0%95\" aria-label=\" 학습 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👨‍💻 학습 과정</h2>\n<h3 id=\"java에는-call-by-reference가-없다\" style=\"position:relative;\"><a href=\"#java%EC%97%90%EB%8A%94-call-by-reference%EA%B0%80-%EC%97%86%EB%8B%A4\" aria-label=\"java에는 call by reference가 없다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java에는 Call By Reference가 없다.</h3>\n<p>자바에는 사실 Call By Reference가 없다고 한다.</p>\n<p>난 여태까지 기본형 타입은 call by value, 참조형 타입은 call by reference 로 동작하는줄 알고 있었다. 하지만 스크럼때 제리가 알려줘서 해당 자료에 대해 찾아보게 됐다. 다행히 여러 블로그들에 잘 설명되어 있어서 쉽게 이해할 수 있었다.\n블로그를 보고 코드를 따라 쳐보았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Main</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Member</span> member1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Member</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Member</span> member2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Member</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"member1의 age: \"</span> <span class=\"token operator\">+</span> member1<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"member2의 age: \"</span> <span class=\"token operator\">+</span> member2<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"======================\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>member1<span class=\"token punctuation\">,</span> member2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"member1의 age: \"</span> <span class=\"token operator\">+</span> member1<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"member2의 age: \"</span> <span class=\"token operator\">+</span> member2<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Member</span> member1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Member</span> member2<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Member</span> temp <span class=\"token operator\">=</span> member1<span class=\"token punctuation\">;</span>\n        member1 <span class=\"token operator\">=</span> member2<span class=\"token punctuation\">;</span>\n        member2 <span class=\"token operator\">=</span> temp<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Member</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Member</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위의 <code class=\"language-text\">swap</code>메서드를 보면 인자로 들어온 멤버변수가 바라보는 객체를 서로 바꿔주는 작업처럼 보인다. 하지만 아래의 출력 결과를 보면 알겠지만 값이 그대로다.</p>\n<img width=\"388\" src=\"https://user-images.githubusercontent.com/57708971/154017530-b30e7d99-55c7-4b05-97fd-120f8482943b.png\">\n<img width=\"230\" src=\"https://user-images.githubusercontent.com/57708971/154017307-549e29d5-4cd8-44a1-ae9f-9a14ea705c52.png\">\n<blockquote>\n<p>메서드의 인자로 참조형 타입을 넘겨주게 되면 해당 객체의 주소값을 그대로 넘겨주는것이 아닌, <strong>해당 객체를 바라보는 새로운 주소값</strong>을 만들어서 넘겨준다. 그렇기 때문에 정확하게 표현하면 Java에서 Call By Reference는 존재하지 않는다고 한다.</p>\n</blockquote>\n<h3 id=\"미션-2단계\" style=\"position:relative;\"><a href=\"#%EB%AF%B8%EC%85%98-2%EB%8B%A8%EA%B3%84\" aria-label=\"미션 2단계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>미션 2단계</h3>\n<p>오늘은 어제 구현한 미션을 리팩토링하는 미션이 주어졌다. 구현한 미션 자체의 사이즈가 작아서 사실 건드릴게 많이 없었다.<br>\n리팩토링을 하면서 고민했던 부분은 **사용자의 입력에 대한 검증의 책임은 어디서 가져야 하는가?**였다.\n처음에는 InputUtil 클래스에서 타입에 대한 검증을 한 뒤, 실제 그 값이 유효한 값인지에 대한 검사는 도메인 내의 로직에서 하려고 했다. 하지만 검증을 이렇게 곳곳에 나눠두는게 과연 좋을까 라는 생각이 들었고 딱히 뭐가 좋다는 결론이 안나서 그룹리뷰 시간에 팀원들과 이야기를 나눠봤다. 일단 내려진 결론은 <strong>각자 스타일이 다르다</strong> 였다. 애초에 올바른 값만 도메인으로 넘겨주는게 좋을것같다고 하는 멤버도 있는 반면, 나와 비슷한 방식으로 생각한 멤버도 있었다. 이런 검증과 예외처리에 대한 부분이 항상 고민인데 자바 클래스동안 미션 구현, 그룹리뷰 등을 통해 더 고민해봐야겠다. 일단 당장은 나눠놔야지..ㅎ</p>\n<ul>\n<li><em>새미의 코드 덕분에 stringbuilder의 append에 char타입의 1차원 배열을 넣으면 배열의 요소들이 그대로 문자열로 저장된다는 사실을 알게 되었다.</em></li>\n</ul>\n<h2 id=\"-좋았던-점\" style=\"position:relative;\"><a href=\"#-%EC%A2%8B%EC%95%98%EB%8D%98-%EC%A0%90\" aria-label=\" 좋았던 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🟢 좋았던 점</h2>\n<ul>\n<li>그룹리뷰를 통해 다른 멤버들의 생각을 들을 수 있었고, 코드를 보며 배웠다.</li>\n<li>타이머를 1시간 단위로 맞춰놓고 사용해서 중간 중간 가질 수 있었다.</li>\n</ul>\n<h2 id=\"-개선점\" style=\"position:relative;\"><a href=\"#-%EA%B0%9C%EC%84%A0%EC%A0%90\" aria-label=\" 개선점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🟡 개선점</h2>\n<ul>\n<li>\n<p>운동을 못했다.</p>\n<blockquote>\n<p>내일부터는 저녁 6시에 일정이 끝나면 운동하는 시간을 1시간 가져야겠다.</p>\n</blockquote>\n</li>\n<li>\n<p>알고리즘 문제를 풀다보니 계획했던 개인공부를 못끝냈다.</p>\n<blockquote>\n<p>일정 시간을 정해두고 넘어가면 다른 공부로 넘어가자!</p>\n</blockquote>\n</li>\n</ul>","frontmatter":{"date":"January 04, 2022","title":"TIL-220104","categories":"TIL","author":"포키","emoji":"📝"},"fields":{"slug":"/til/02/2022-02-15-til/"}},"prev":{"id":"9367446c-5414-5d67-8f71-cce92195d86b","html":"<h2 id=\"-학습-과정\" style=\"position:relative;\"><a href=\"#-%ED%95%99%EC%8A%B5-%EA%B3%BC%EC%A0%95\" aria-label=\" 학습 과정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👨‍💻 학습 과정</h2>\n<h3 id=\"도커\" style=\"position:relative;\"><a href=\"#%EB%8F%84%EC%BB%A4\" aria-label=\"도커 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도커</h3>\n<p>오늘은 도커를 통해 mysql을 설치해서 사용하는 미션이 나왔고 구현에 앞서<code class=\"language-text\">노리</code>가 공유해준 <a href=\"\">생활코딩의 도커 강의</a>와 <a href=\"\">우테코 테코톡</a>를 보면서 도커에 대해 학습하는 시간을 가졌다.</p>\n<ul>\n<li><a href=\"https://kale02.notion.site/Docker-0eeed1d05ec24377975cd18a6e9aa01a\">📝 도커 정리 링크</a></li>\n</ul>\n<p>거의 2년전에 오라클 DB를 설치해보려고 도커를 사용했던 경험이 있다. 그 당시 개발 자체가 처음이어서 도커에 대해 찾아봤지만 무슨말인지 이해를 못하고 그냥 블로그를 찾아보며 코드만 따라쳐서 겨우 설치했었다. 하지만 이번 cs과정을 거쳐오면서 컴퓨터의 구조, 프로세스 등에 대해서 알게 되었고 그 덕분인지 도커의 탄생 배경, 컨테이너와 이미지가 무엇인지 쉽게 이해할 수 있었다.</p>\n<p>이후 실제로 사용하면서 컨테이너를 띄우는 작업까지는 비교적 수월하게 했는데 locale을 설정하는 부분에서 막혔는데 아래와 같은 이유 때문이었다.</p>\n<blockquote>\n<p><em>도커의 공식 이미지는 데비안이 사용되고 있었기 때문에 <code class=\"language-text\">local-gen</code> 스크립트를 통해서 locale이 생성되지 않는다.</em></p>\n<ul>\n<li><a href=\"https://www.44bits.io/ko/post/setup_linux_locale_on_ubuntu_and_debian_container\">참고한 44Bits 블로그</a></li>\n</ul>\n</blockquote>\n<p>오후 시간부터는 쿼리 문법을 익히고 SQL 스크립트를 작성하느라 도커를 더 깊게 학습하지는 못했는데 나중에 해봐야겠다. 도커 스웜부터해서 재밌어보이는 내용들이 한가득..</p>\n<h2 id=\"-좋았던-점\" style=\"position:relative;\"><a href=\"#-%EC%A2%8B%EC%95%98%EB%8D%98-%EC%A0%90\" aria-label=\" 좋았던 점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🟢 좋았던 점</h2>\n<ul>\n<li>십자인대를 다친 이후로 거의 처음 근력운동을 시작했다. 건강해지자.</li>\n<li>7시에 기상!</li>\n</ul>\n<h2 id=\"-개선점\" style=\"position:relative;\"><a href=\"#-%EA%B0%9C%EC%84%A0%EC%A0%90\" aria-label=\" 개선점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🟡 개선점</h2>\n<ul>\n<li>\n<p>아직 공유하는게 어렵다. 별 내용도 아니고 그냥 학습할때 참고한 자료 공유하는건데도 잘 안되는것 같다. 내가 막힌 부분들에서 다른 사람들도 막히는걸 봤는데 도움을 못준거같아서 미안해진다.<br>\n<strong>별거 없어도 공유하려고 노력해보자.</strong></p>\n</li>\n<li>\n<p>내 한계를 객관적으로 분석하자. 코드스쿼드를 들어오고나서 의욕만 앞섰던 적이 많았는데 앞으로는 내가 퀄리티있게 해낼 수 있는 수준까지만 일을 벌리자.<br>\n<strong>의욕이 넘칠때 더 객관적으로 나를 바라보자.</strong></p>\n</li>\n</ul>","frontmatter":{"date":"January 04, 2022","title":"TIL-220104","categories":"TIL","author":"포키","emoji":"📝"},"fields":{"slug":"/til/02/2022-02-07-til/"}},"site":{"siteMetadata":{"siteUrl":"https://seokho-ham.github.io","comments":{"utterances":{"repo":"seokho-ham/seokho-ham.github.io"}}}}},"pageContext":{"slug":"/til/02/2022-02-09-til/","nextSlug":"/til/02/2022-02-15-til/","prevSlug":"/til/02/2022-02-07-til/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}